{"version":3,"sources":["redux/todos/todos-actionTypes.js","redux/todos/todos-utils.js","redux/todos/todos-reducer.js","redux/buckets/buckets-actionTypes.js","redux/buckets/buckets-utils.js","redux/buckets/buckets-reducer.js","redux/buckets/buckets-data.js","redux/root-reducer.js","redux/store.js","components/header/header.js","redux/buckets/buckets-selectors.js","redux/buckets/buckets-actions.js","components/add-listType-container/add-listType-container.js","redux/todos/todos-actions.js","components/edit-listType-container/edit-listType-container.js","components/delete-listType-container/delete-listType-container.js","components/action-modal/action-modal.js","components/add-buttons-container/add-buttons-container.js","components/buckets-list/buckets-list.js","redux/todos/todos-selectors.js","components/todo-list/todo-list.js","pages/home-page/home-page.js","App.js","index.js"],"names":["todosActionTypes","ADD_TODO","DELETE_TODO","DELETE_TODO_WITH_BUCKET_ID","EDIT_TODO","CHANGE_COMPLETED_STATUS","addTodo","todoList","name","selectedBucketId","id","length","bucketId","isCompleted","editTodo","map","todo","deleteTodoWithBucketId","filter","deleteTodo","changeCompletedStatus","INITIAL_STATE","bucketsActionTypes","ADD_BUCKET","DELETE_BUCKET","SET_ACTIVE_BUCKET","EDIT_BUCKET","addBucket","buckets","bucketToAdd","isActive","editBucket","bucket","deleteBucket","bucketsList","isDelete","activeBucketId","rootReducer","todos","state","action","type","payload","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","Header","className","getBuckets","getBucketsList","createSelector","getActiveBucketId","setActiveBucket","mapStateToProps","createStructuredSelector","connect","dispatch","listType","onHide","useState","validated","setValidated","setName","setSelectedBucket","onChangeValue","e","target","value","Number","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","Group","controlId","Label","Control","as","defaultValue","onChange","required","placeholder","Feedback","Button","variant","onClick","currentData","currentName","deleteListType","getCapitalString","str","charAt","toUpperCase","slice","ActionModal","show","actionType","modalContent","Modal","size","aria-labelledby","centered","closeButton","Title","Body","defaultProps","AddButtonsContainer","isModalShow","setModalShow","setListType","showModal","currentBucket","setCurrentBucket","setActionType","ListGroup","Item","active","getTodoList","currentTodo","setCurrentTodo","todosList","checked","onStatusChange","icon","style","display","flex","backgroundColor","alignSelf","color","borderColor","borderRadius","overflow","marginRight","cursor","label","Jumbotron","fluid","HomePage","Container","Row","Col","md","App","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4a85abc0.chunk.js","sourcesContent":["const todosActionTypes = {\r\n  ADD_TODO: 'ADD_TODO',\r\n  DELETE_TODO: 'DELETE_TODO',\r\n  DELETE_TODO_WITH_BUCKET_ID: 'DELETE_TODO_WITH_BUCKET_ID',\r\n  EDIT_TODO: 'EDIT_TODO',\r\n  CHANGE_COMPLETED_STATUS: 'CHANGE_COMPLETED_STATUS'\r\n};\r\n\r\nexport default todosActionTypes;\r\n","export const addTodo = (todoList, { name, selectedBucketId }) => {\r\n  return [\r\n    ...todoList,\r\n    {\r\n      id: todoList.length ? todoList[todoList.length - 1].id + 1 : 1,\r\n      name: name,\r\n      bucketId: selectedBucketId,\r\n      isCompleted: false\r\n    }\r\n  ];\r\n};\r\n\r\nexport const editTodo = (todoList, { id, name, selectedBucketId }) => {\r\n  return todoList.map((todo) => {\r\n    if (todo.id === id) {\r\n      return { ...todo, name, bucketId: selectedBucketId };\r\n    }\r\n    return todo;\r\n  });\r\n};\r\n\r\nexport const deleteTodoWithBucketId = (todoList, { id }) => {\r\n  return todoList.filter((todo) => todo.bucketId !== id);\r\n};\r\n\r\nexport const deleteTodo = (todoList, { id }) => {\r\n  return todoList.filter((todo) => todo.id !== id);\r\n};\r\n\r\nexport const changeCompletedStatus = (todoList, { id }) => {\r\n  return todoList.map((todo) => {\r\n    if (todo.id === id) {\r\n      return { ...todo, isCompleted: !todo.isCompleted };\r\n    }\r\n    return todo;\r\n  });\r\n};\r\n","import todosActionTypes from './todos-actionTypes';\r\nimport {\r\n  addTodo,\r\n  editTodo,\r\n  deleteTodoWithBucketId,\r\n  deleteTodo,\r\n  changeCompletedStatus\r\n} from './todos-utils';\r\n\r\nconst INITIAL_STATE = {\r\n  todoList: []\r\n};\r\n\r\nconst todosReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case todosActionTypes.ADD_TODO:\r\n      return { ...state, todoList: addTodo(state.todoList, action.payload) };\r\n    case todosActionTypes.EDIT_TODO:\r\n      return { ...state, todoList: editTodo(state.todoList, action.payload) };\r\n    case todosActionTypes.DELETE_TODO_WITH_BUCKET_ID:\r\n      return { ...state, todoList: deleteTodoWithBucketId(state.todoList, action.payload) };\r\n    case todosActionTypes.DELETE_TODO:\r\n      return { ...state, todoList: deleteTodo(state.todoList, action.payload) };\r\n    case todosActionTypes.CHANGE_COMPLETED_STATUS:\r\n      return { ...state, todoList: changeCompletedStatus(state.todoList, action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","const bucketsActionTypes = {\r\n  ADD_BUCKET: 'ADD_BUCKET',\r\n  DELETE_BUCKET: 'DELETE_BUCKET',\r\n  SET_ACTIVE_BUCKET: 'SET_ACTIVE_BUCKET',\r\n  EDIT_BUCKET: 'EDIT_BUCKET'\r\n};\r\n\r\nexport default bucketsActionTypes;\r\n","export const addBucket = (buckets, bucketToAdd) => {\r\n  return [\r\n    ...buckets,\r\n    {\r\n      id: buckets.length ? buckets[buckets.length - 1].id + 1 : 1,\r\n      name: bucketToAdd,\r\n      isActive: false\r\n    }\r\n  ];\r\n};\r\n\r\nexport const editBucket = (buckets, { id, name }) => {\r\n  return buckets.map((bucket) => {\r\n    if (bucket.id === id) {\r\n      return { ...bucket, name };\r\n    }\r\n    return bucket;\r\n  });\r\n};\r\n\r\nexport const deleteBucket = (buckets, { id }) => {\r\n  return buckets.filter((bucket) => bucket.id !== id);\r\n};\r\n","import bucketsActionTypes from './buckets-actionTypes';\r\nimport BUCKETS_DATA from './buckets-data';\r\nimport { addBucket, editBucket, deleteBucket } from './buckets-utils';\r\n\r\nconst INITIAL_STATE = {\r\n  bucketsList: BUCKETS_DATA,\r\n  activeBucketId: 1\r\n};\r\n\r\nconst bucketsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case bucketsActionTypes.ADD_BUCKET:\r\n      return { ...state, bucketsList: addBucket(state.bucketsList, action.payload) };\r\n    case bucketsActionTypes.SET_ACTIVE_BUCKET:\r\n      return { ...state, activeBucketId: action.payload };\r\n    case bucketsActionTypes.EDIT_BUCKET:\r\n      return { ...state, bucketsList: editBucket(state.bucketsList, action.payload) };\r\n    case bucketsActionTypes.DELETE_BUCKET:\r\n      return { ...state, bucketsList: deleteBucket(state.bucketsList, action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bucketsReducer;\r\n","export const BUCKETS_DATA = [\r\n  {\r\n    id: 1,\r\n    name: 'Others',\r\n    isDelete: false\r\n  }\r\n];\r\n\r\nexport default BUCKETS_DATA;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport todosReducer from './todos/todos-reducer';\r\nimport bucketsReducer from './buckets/buckets-reducer';\r\n\r\nconst rootReducer = {\r\n  todos: todosReducer,\r\n  buckets: bucketsReducer\r\n};\r\n\r\nexport default combineReducers(rootReducer);\r\n","import { createStore } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage/session';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(persistedReducer);\r\n\r\nexport const persistor = persistStore(store);\r\n","import './header.scss';\r\n\r\nconst Header = () => <h3 className='text-primary p-3'>Todo App</h3>;\r\n\r\nexport default Header;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getBuckets = (state) => state.buckets;\r\n\r\nexport const getBucketsList = createSelector(getBuckets, (buckets) => buckets.bucketsList);\r\n\r\nexport const getActiveBucketId = createSelector(getBuckets, (buckets) => buckets.activeBucketId);\r\n","import bucketsActionTypes from './buckets-actionTypes';\r\n\r\nexport const addBucket = (bucket) => ({\r\n  type: bucketsActionTypes.ADD_BUCKET,\r\n  payload: bucket\r\n});\r\n\r\nexport const deleteBucket = (bucket) => ({\r\n  type: bucketsActionTypes.DELETE_BUCKET,\r\n  payload: bucket\r\n});\r\n\r\nexport const setActiveBucket = (bucketId) => ({\r\n  type: bucketsActionTypes.SET_ACTIVE_BUCKET,\r\n  payload: bucketId\r\n});\r\n\r\nexport const editBucket = (bucket) => ({\r\n  type: bucketsActionTypes.EDIT_BUCKET,\r\n  payload: bucket\r\n});\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport { getBucketsList, getActiveBucketId } from '../../redux/buckets/buckets-selectors';\r\nimport { addBucket } from '../../redux/buckets/buckets-actions';\r\nimport { addTodo } from '../../redux/todos/todos-actions';\r\n\r\nconst AddListTypeContainer = ({\r\n  listType,\r\n  onHide,\r\n  addBucket,\r\n  addTodo,\r\n  buckets,\r\n  activeBucketId\r\n}) => {\r\n  const [validated, setValidated] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [selectedBucketId, setSelectedBucket] = useState(activeBucketId);\r\n\r\n  const onChangeValue = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else {\r\n      setSelectedBucket(Number(value));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    setValidated(true);\r\n\r\n    if (name) {\r\n      listType === 'bucket' ? addBucket(name) : addTodo({ name, selectedBucketId });\r\n      onHide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      {listType === 'todo' ? (\r\n        <Form.Group controlId='bucketName'>\r\n          <Form.Label>Select bucket</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            name='selectedBucket'\r\n            defaultValue={buckets.filter(({ isDelete }) => isDelete === false).name}\r\n            value={selectedBucketId}\r\n            onChange={onChangeValue}\r\n          >\r\n            {buckets.map(({ id, name }) => (\r\n              <option key={id} value={id}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      ) : null}\r\n\r\n      <Form.Group controlId='name' className='mb-0'>\r\n        <Form.Control\r\n          required\r\n          type='text'\r\n          name='name'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={onChangeValue}\r\n        />\r\n        <Form.Control.Feedback type='invalid'>Name cannot be empty</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <div className='mt-3 d-flex justify-content-between'>\r\n        <Button type='submit' variant='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button onClick={onHide} variant='danger'>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddListTypeContainer.propTypes = {\r\n  buckets: PropTypes.array.isRequired,\r\n  activeBucketId: PropTypes.number.isRequired,\r\n  listType: PropTypes.string.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  addBucket: PropTypes.func.isRequired,\r\n  addTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  buckets: getBucketsList,\r\n  activeBucketId: getActiveBucketId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addBucket: (name) => dispatch(addBucket(name)),\r\n  addTodo: (name) => dispatch(addTodo(name))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddListTypeContainer);\r\n","import todosActionTypes from './todos-actionTypes';\r\n\r\nexport const addTodo = (todo) => ({\r\n  type: todosActionTypes.ADD_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodo = (id) => ({\r\n  type: todosActionTypes.DELETE_TODO,\r\n  payload: id\r\n});\r\n\r\nexport const editTodo = (todo) => ({\r\n  type: todosActionTypes.EDIT_TODO,\r\n  payload: todo\r\n});\r\n\r\nexport const deleteTodoWithBucketId = (id) => ({\r\n  type: todosActionTypes.DELETE_TODO_WITH_BUCKET_ID,\r\n  payload: id\r\n});\r\n\r\nexport const changeCompletedStatus = (id) => ({\r\n  type: todosActionTypes.CHANGE_COMPLETED_STATUS,\r\n  payload: id\r\n});\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport { getBucketsList } from '../../redux/buckets/buckets-selectors';\r\nimport { editBucket } from '../../redux/buckets/buckets-actions';\r\nimport { editTodo } from '../../redux/todos/todos-actions';\r\n\r\nconst EditListTypeContainer = ({\r\n  listType,\r\n  onHide,\r\n  currentData,\r\n  editBucket,\r\n  editTodo,\r\n  buckets\r\n}) => {\r\n  const { id, name: currentName, bucketId } = currentData;\r\n  const [validated, setValidated] = useState(false);\r\n  const [name, setName] = useState(currentName);\r\n  const [selectedBucketId, setSelectedBucket] = useState(bucketId);\r\n\r\n  const onChangeValue = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === 'name') {\r\n      setName(value);\r\n    } else {\r\n      setSelectedBucket(Number(value));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    setValidated(true);\r\n\r\n    if (name) {\r\n      listType === 'bucket' ? editBucket(id, name) : editTodo(id, name, selectedBucketId);\r\n      onHide();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n      {listType === 'todo' ? (\r\n        <Form.Group controlId='bucketName'>\r\n          <Form.Label>Select bucket</Form.Label>\r\n          <Form.Control\r\n            as='select'\r\n            name='selectedBucket'\r\n            defaultValue={buckets.filter(({ isDelete }) => isDelete === false).name}\r\n            value={selectedBucketId}\r\n            onChange={onChangeValue}\r\n          >\r\n            {buckets.map(({ id, name }) => (\r\n              <option key={id} value={id}>\r\n                {name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      ) : null}\r\n\r\n      <Form.Group controlId='name' className='mb-0'>\r\n        <Form.Control\r\n          required\r\n          type='text'\r\n          name='name'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={onChangeValue}\r\n        />\r\n        <Form.Control.Feedback type='invalid'>Name cannot be empty</Form.Control.Feedback>\r\n      </Form.Group>\r\n      <div className='mt-3 d-flex justify-content-between'>\r\n        <Button type='submit' variant='primary'>\r\n          Submit\r\n        </Button>\r\n        <Button onClick={onHide} variant='danger'>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nEditListTypeContainer.propTypes = {\r\n  buckets: PropTypes.array.isRequired,\r\n  editBucket: PropTypes.func.isRequired,\r\n  editTodo: PropTypes.func.isRequired,\r\n  listType: PropTypes.string.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  currentData: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  buckets: getBucketsList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  editBucket: (id, name) => dispatch(editBucket({ id, name })),\r\n  editTodo: (id, name, selectedBucketId) => dispatch(editTodo({ id, name, selectedBucketId }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditListTypeContainer);\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { deleteBucket, setActiveBucket } from '../../redux/buckets/buckets-actions';\r\nimport { deleteTodoWithBucketId, deleteTodo } from '../../redux/todos/todos-actions';\r\nimport { getActiveBucketId } from '../../redux/buckets/buckets-selectors';\r\n\r\nconst DeleteListTypeContainer = ({\r\n  listType,\r\n  onHide,\r\n  currentData,\r\n  deleteBucket,\r\n  deleteTodoWithBucketId,\r\n  activeBucketId,\r\n  setActiveBucket,\r\n  deleteTodo\r\n}) => {\r\n  const { id } = currentData;\r\n\r\n  const deleteListType = (id, listType) => {\r\n    if (listType === 'bucket') {\r\n      deleteBucket(id);\r\n      deleteTodoWithBucketId(id);\r\n      if (activeBucketId === id) {\r\n        setActiveBucket(1);\r\n      }\r\n    } else {\r\n      deleteTodo(id);\r\n    }\r\n\r\n    onHide();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className='text-center'>\r\n        {`Are you sure you want to delete this ${listType}?`}\r\n        {listType === 'bucket' && ' All the todos in this bucket will be deleted'}\r\n      </p>\r\n      <div className='mt-3 d-flex justify-content-between'>\r\n        <Button type='submit' variant='primary' onClick={() => deleteListType(id, listType)}>\r\n          Delete\r\n        </Button>\r\n        <Button onClick={onHide} variant='danger'>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeleteListTypeContainer.propTypes = {\r\n  listType: PropTypes.string.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  currentData: PropTypes.object.isRequired,\r\n  deleteBucket: PropTypes.func.isRequired,\r\n  deleteTodoWithBucketId: PropTypes.func.isRequired,\r\n  activeBucketId: PropTypes.bool.isRequired,\r\n  setActiveBucket: PropTypes.func.isRequired,\r\n  deleteTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  activeBucketId: getActiveBucketId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteBucket: (id) => dispatch(deleteBucket({ id })),\r\n  deleteTodoWithBucketId: (id) => dispatch(deleteTodoWithBucketId({ id })),\r\n  setActiveBucket: (bucketId) => dispatch(setActiveBucket(bucketId)),\r\n  deleteTodo: (id) => dispatch(deleteTodo({ id }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteListTypeContainer);\r\n","import PropTypes from 'prop-types';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport AddListTypeContainer from '../add-listType-container/add-listType-container';\r\nimport EditListTypeContainer from '../edit-listType-container/edit-listType-container';\r\nimport DeleteListTypeContainer from '../delete-listType-container/delete-listType-container';\r\n\r\nimport './action-modal.scss';\r\n\r\nconst getCapitalString = (str) => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\nconst ActionModal = ({ show, onHide, actionType, listType, currentData }) => {\r\n  let modalContent = null;\r\n\r\n  if (actionType === 'add') {\r\n    modalContent = <AddListTypeContainer listType={listType} onHide={onHide} />;\r\n  } else if (actionType === 'edit') {\r\n    modalContent = (\r\n      <EditListTypeContainer currentData={currentData} listType={listType} onHide={onHide} />\r\n    );\r\n  } else {\r\n    modalContent = (\r\n      <DeleteListTypeContainer currentData={currentData} listType={listType} onHide={onHide} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={onHide} size='sm' aria-labelledby='action-modal' centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id='action-modal'>\r\n          {`${getCapitalString(actionType)} ${getCapitalString(listType)}`}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{modalContent}</Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nActionModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onHide: PropTypes.func.isRequired,\r\n  actionType: PropTypes.string.isRequired,\r\n  listType: PropTypes.string.isRequired,\r\n  currentData: PropTypes.object\r\n};\r\n\r\nActionModal.defaultProps = {\r\n  currentData: {}\r\n};\r\n\r\nexport default ActionModal;\r\n","import { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nimport ActionModal from '../action-modal/action-modal';\r\n\r\nimport './add-buttons-container.scss';\r\n\r\nconst AddButtonsContainer = () => {\r\n  const [isModalShow, setModalShow] = useState(false);\r\n  const [listType, setListType] = useState('');\r\n\r\n  const showModal = (listType) => {\r\n    setListType(listType);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className='add-container py-4'>\r\n      <Button variant='success' onClick={() => showModal('bucket')}>\r\n        <FaPlus />\r\n        <span>New Bucket</span>\r\n      </Button>\r\n      <Button variant='success' onClick={() => showModal('todo')}>\r\n        <FaPlus />\r\n        <span>New Todo</span>\r\n      </Button>\r\n      <ActionModal show={isModalShow} onHide={hideModal} actionType='add' listType={listType} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButtonsContainer;\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { FaPen, FaTimes } from 'react-icons/fa';\r\n\r\nimport { getBucketsList, getActiveBucketId } from '../../redux/buckets/buckets-selectors';\r\nimport { setActiveBucket } from '../../redux/buckets/buckets-actions';\r\n\r\nimport ActionModal from '../action-modal/action-modal';\r\n\r\nimport './buckets-list.scss';\r\n\r\nconst BucketsList = ({ buckets, setActiveBucket, activeBucketId }) => {\r\n  const [isModalShow, setModalShow] = useState(false);\r\n  const [currentBucket, setCurrentBucket] = useState({});\r\n  const [actionType, setActionType] = useState('');\r\n\r\n  const showModal = (bucket, actionType) => {\r\n    setActionType(actionType);\r\n    setCurrentBucket(bucket);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className='buckets-list-container pb-4 py-md-4'>\r\n      <div className='title text-secondary mb-4'>Buckets</div>\r\n      <div className='buckets-list'>\r\n        <ListGroup>\r\n          {buckets.map((bucket) => {\r\n            const { id, name, isDelete = true } = bucket;\r\n\r\n            return (\r\n              <ListGroup.Item key={id} active={id === activeBucketId}>\r\n                <span className='name pr-2' onClick={() => setActiveBucket(id)}>\r\n                  {name}\r\n                </span>\r\n                <span className='actions'>\r\n                  <FaPen onClick={() => showModal(bucket, 'edit')} />\r\n                  {isDelete && (\r\n                    <FaTimes className='ml-2' onClick={() => showModal(bucket, 'delete')} />\r\n                  )}\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      </div>\r\n      <ActionModal\r\n        show={isModalShow}\r\n        onHide={hideModal}\r\n        actionType={actionType}\r\n        listType='bucket'\r\n        currentData={currentBucket}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nBucketsList.propTypes = {\r\n  buckets: PropTypes.array.isRequired,\r\n  activeBucketId: PropTypes.number.isRequired,\r\n  setActiveBucket: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  buckets: getBucketsList,\r\n  activeBucketId: getActiveBucketId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setActiveBucket: (bucketId) => dispatch(setActiveBucket(bucketId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BucketsList);\r\n","import {createSelector} from 'reselect';\r\n\r\nconst getTodos = (state) => state.todos;\r\n\r\nexport const getTodoList = createSelector(getTodos, (todos) => todos.todoList);\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { ListGroup, Jumbotron } from 'react-bootstrap';\r\nimport Checkbox from 'react-custom-checkbox';\r\nimport * as Icon from 'react-icons/fi';\r\nimport { FaPen, FaTimes } from 'react-icons/fa';\r\n\r\nimport { getTodoList } from '../../redux/todos/todos-selectors';\r\nimport { getActiveBucketId } from '../../redux/buckets/buckets-selectors';\r\nimport { changeCompletedStatus } from '../../redux/todos/todos-actions';\r\n\r\nimport ActionModal from '../action-modal/action-modal';\r\n\r\nimport './todo-list.scss';\r\n\r\nconst TodoList = ({ todos, activeBucketId, changeCompletedStatus }) => {\r\n  const [isModalShow, setModalShow] = useState(false);\r\n  const [currentTodo, setCurrentTodo] = useState({});\r\n  const [actionType, setActionType] = useState('');\r\n\r\n  const showModal = (todo, actionType) => {\r\n    setActionType(actionType);\r\n    setCurrentTodo(todo);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalShow(false);\r\n  };\r\n\r\n  const onStatusChange = (id) => {\r\n    changeCompletedStatus(id);\r\n  };\r\n\r\n  const todosList = todos.filter((todo) => todo.bucketId === activeBucketId);\r\n\r\n  return (\r\n    <div className='todo-list-container pb-4 py-md-4'>\r\n      <div className='title text-secondary mb-4'>Todo List</div>\r\n      {todosList.length ? (\r\n        <ListGroup>\r\n          {todosList.map((todo) => {\r\n            const { id, name, isCompleted } = todo;\r\n\r\n            return (\r\n              <ListGroup.Item key={id}>\r\n                <span className='name pr-2'>\r\n                  <Checkbox\r\n                    checked={isCompleted}\r\n                    onChange={() => onStatusChange(id)}\r\n                    icon={\r\n                      <div\r\n                        style={{\r\n                          display: 'flex',\r\n                          flex: 1,\r\n                          backgroundColor: '#174A41',\r\n                          alignSelf: 'stretch'\r\n                        }}\r\n                      >\r\n                        <Icon.FiCheck color='white' size={17} />\r\n                      </div>\r\n                    }\r\n                    borderColor='#174A41'\r\n                    borderRadius={20}\r\n                    style={{ overflow: 'hidden', marginRight: '5px', cursor: 'pointer' }}\r\n                    size={20}\r\n                    label={name}\r\n                  />\r\n                </span>\r\n                <span className='actions'>\r\n                  <FaPen onClick={() => showModal(todo, 'edit')} />\r\n                  <FaTimes className='ml-2' onClick={() => showModal(todo, 'delete')} />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n        </ListGroup>\r\n      ) : (\r\n        <Jumbotron fluid className='border rounded mb-0'>\r\n          <p className='text-center px-3'>Your todo list is empty!</p>\r\n        </Jumbotron>\r\n      )}\r\n      <ActionModal\r\n        show={isModalShow}\r\n        onHide={hideModal}\r\n        actionType={actionType}\r\n        listType='todo'\r\n        currentData={currentTodo}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  activeBucketId: PropTypes.number.isRequired,\r\n  changeCompletedStatus: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  todos: getTodoList,\r\n  activeBucketId: getActiveBucketId\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeCompletedStatus: (id) => dispatch(changeCompletedStatus({ id }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport AddButtonsContainer from '../../components/add-buttons-container/add-buttons-container';\r\nimport BucketsList from '../../components/buckets-list/buckets-list';\r\nimport TodoList from '../../components/todo-list/todo-list';\r\n\r\nconst HomePage = () => (\r\n  <Container>\r\n    <Row>\r\n      <Col md={12}>\r\n        <AddButtonsContainer />\r\n      </Col>\r\n      <Col md={4}>\r\n        <BucketsList />\r\n      </Col>\r\n      <Col md={8}>\r\n        <TodoList />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default HomePage;\r\n","import Header from './components/header/header';\nimport HomePage from './pages/home-page/home-page';\n\nconst App = () => (\n  <div className='App'>\n    <Header />\n    <HomePage />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}